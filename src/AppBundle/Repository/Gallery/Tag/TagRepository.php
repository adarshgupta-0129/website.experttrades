<?php

namespace AppBundle\Repository\Gallery\Tag;

use AppBundle\Repository\Repository;
use AppBundle\Entity\Gallery\Item\ItemInterface;

/**
 * SiteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TagRepository extends Repository{


  public function search( $filters = [], $orderBy = []){
      $data = $this->getEntityManager()->createQueryBuilder();
      $data->select('t');
      $data->from('AppBundle\Entity\Gallery\Tag\Tag', 't');
      if( isset($filters['search']) && $filters['search'])
      {
        $data->where('t.name LIKE :search');
        $data->setParameter('search', $filters['search']);
      }
      if( count($orderBy) > 0 ){
      	$i = 0;
      	foreach ($orderBy as $name=>$order){
      		if( $i === 0) $data->orderBy('t.'.$name, $order);
      		else  $data->addOrderBy('t.'.$name, $order);
      		
      		$i++;      			
      	}
      }
      
      $subquery = $this->getEntityManager()->createQueryBuilder();
      $subquery->select('COUNT(t2.id)')
      ->from('AppBundle\Entity\Gallery\Tag\Tag', 't2')
      ->where('t2.parent = t.id')
      ->andWhere('t2.parent IS NOT NULL');
      $data->addSelect('('.$subquery->getDQL().') as has_childs');
      
      $q = $data->getQuery();
	  $q->setHint(\Doctrine\ORM\Query::HINT_INCLUDE_META_COLUMNS, true);
	  $return = [];
	  foreach($q->getArrayResult() as $ret){
	  	if( isset($ret['has_childs']) && $ret['has_childs'] > 0 &&  isset($ret[0]) ){
	  		$ret[0]['has_childs'] = true;
	  		$return[] = $ret[0];
	  	} else {
	  		$ret[0]['has_childs'] = false;
	  		$return[] = $ret[0];
	  	}
	  }
      return $return;
  }
  
  public function getForDisplay(){
  	$data = $this->getEntityManager()->createQueryBuilder();
  	$data->select('t');
  	$data->from('AppBundle\Entity\Gallery\Tag\Tag', 't');
  	$data->where("t.path <> 'homepage'");
  	$data->andWhere("t.path <> 'footer'");
  	$data->addOrderBy('t.path', 'ASC');
  
  	$subquery = $this->getEntityManager()->createQueryBuilder();
  	$subquery->select('COUNT(t2.id)')
  	->from('AppBundle\Entity\Gallery\Tag\Tag', 't2')
  	->where('t2.parent = t.id')
  	->andWhere('t2.parent IS NOT NULL');
  	$data->addSelect('('.$subquery->getDQL().') as has_childs');
  
  	$q = $data->getQuery();
  	$q->setHint(\Doctrine\ORM\Query::HINT_INCLUDE_META_COLUMNS, true);
  	$return = [];
  	foreach($q->getArrayResult() as $ret){
  		if( isset($ret['has_childs']) && $ret['has_childs'] > 0 &&  isset($ret[0]) ){
  			$ret[0]['has_childs'] = true;
  			$return[] = $ret[0];
  		} else {
  			$ret[0]['has_childs'] = false;
  			$return[] = $ret[0];
  		}
  	}
  	return $return;
  }
  
  
  
  public function checkTagAccess( $tagId){
  
  	$data = $this->getEntityManager()->createQueryBuilder();
  	$data->select('tag')->from('AppBundle\Entity\Gallery\Tag\Tag', 'tag');
  	$data->where('tag.id = :tag_id');
  	$data->setParameters(array('tag_id' => $tagId));
  
  	return is_object($data->getQuery()->getOneOrNullResult());
  }


}
