<?php

namespace AppBundle\Repository\Service\Item;

use AppBundle\Repository\Repository;

/**
 * SiteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemRepository extends Repository{

  public function getForDisplay(){

      $data = $this->getEntityManager()->createQueryBuilder();
      $data->select('i')->from('AppBundle\Entity\Service\Item\Item', 'i');

      $result = []; $row = [];
      foreach($data->getQuery()->getResult() as $r){

        $result[] = $r;

        /*if(sizeof($row) == 3){
          $result[] = $row;
          $row = [];
        }*/
      }

      if(sizeof($row) != 0){
        $result[] = $row;
      }

      return $result;
  }

  public function getPaginated($limit, $offset, $orderBY=null){

      $data = $this->getEntityManager()->createQueryBuilder();
      $data->select('i')->from('AppBundle\Entity\Service\Item\Item', 'i');
      $data->setFirstResult($offset);
      $data->setMaxResults($limit);
      if( is_null($orderBY) ){
      	$data->orderBy('i.id', 'desc');
      } else {
      	switch (strtolower($orderBY)){
      		case 'order':
      			$data->orderBy('i.order', 'asc');
      			$data->addOrderBy('i.id', 'desc');
      			break;
      		default:
      			$data->orderBy('i.id', 'desc');
      			
      	}
      }

      $count = $this->getEntityManager()->createQueryBuilder();
      $count->select('count(i.id)')->from('AppBundle\Entity\Service\Item\Item', 'i');
      $total = $count->getQuery()->getSingleScalarResult();

      $final = [];
      foreach($data->getQuery()->getResult() as $i){
        $final[] = $i;
      }

      return $this->payload($total, $limit, $offset, $final);

  }
  
  public function getPaginatedAdmin($limit, $offset, $path){

      $data = $this->getEntityManager()->createQueryBuilder();
      $data->select('i')->from('AppBundle\Entity\Service\Item\Item', 'i');
      $data->setFirstResult($offset);
      $data->setMaxResults($limit);
      $data->orderBy('i.id', 'desc');

      $count = $this->getEntityManager()->createQueryBuilder();
      $count->select('count(i.id)')->from('AppBundle\Entity\Service\Item\Item', 'i');
      $total = $count->getQuery()->getSingleScalarResult();

      $final = [];
      foreach($data->getQuery()->getResult() as $i){
        $final[] = [
          'id' => $i->getId(),
          'title' => $i->getTitle(),
          'order' => $i->getOrder(),
          'subtitle' => $i->getSubtitle(),
          'page_slug' => $i->getPageSlug(),
          'page_meta_title' => $i->getPageMetaTitle(),
          'page_meta_description' => $i->getPageMetaDescription(),
          'page_title' => $i->getPageTitle(),
          'page_html' => $i->getPageHtml(),
          'page_active' => $i->getPageActive(),
          'image_url' => (is_null($i->getPath())) ? null : $path.$i->getPath()
        ];
      }

      return $this->payload($total, $limit, $offset, $final);

  }

}
